
wc:     file format elf64-x86-64
wc
architecture: i386:x86-64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000000000400570

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000400040 paddr 0x0000000000400040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r-x
  INTERP off    0x0000000000000238 vaddr 0x0000000000400238 paddr 0x0000000000400238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000400000 paddr 0x0000000000400000 align 2**21
         filesz 0x00000000000008e4 memsz 0x00000000000008e4 flags r-x
    LOAD off    0x0000000000000e10 vaddr 0x0000000000600e10 paddr 0x0000000000600e10 align 2**21
         filesz 0x0000000000000250 memsz 0x0000000000000258 flags rw-
 DYNAMIC off    0x0000000000000e28 vaddr 0x0000000000600e28 paddr 0x0000000000600e28 align 2**3
         filesz 0x00000000000001d0 memsz 0x00000000000001d0 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000400254 paddr 0x0000000000400254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x00000000000007b8 vaddr 0x00000000004007b8 paddr 0x00000000004007b8 align 2**2
         filesz 0x0000000000000034 memsz 0x0000000000000034 flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000e10 vaddr 0x0000000000600e10 paddr 0x0000000000600e10 align 2**0
         filesz 0x00000000000001f0 memsz 0x00000000000001f0 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x00000000004004c8
  FINI                 0x0000000000400774
  INIT_ARRAY           0x0000000000600e10
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000600e18
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000400298
  STRTAB               0x0000000000400378
  SYMTAB               0x00000000004002b8
  STRSZ                0x000000000000005a
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000601000
  PLTRELSZ             0x00000000000000a8
  PLTREL               0x0000000000000007
  JMPREL               0x0000000000400420
  RELA                 0x0000000000400408
  RELASZ               0x0000000000000018
  RELAENT              0x0000000000000018
  VERNEED              0x00000000004003e8
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x00000000004003d2

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000400238  0000000000400238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000400254  0000000000400254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000400274  0000000000400274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000400298  0000000000400298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       000000c0  00000000004002b8  00000000004002b8  000002b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       0000005a  0000000000400378  0000000000400378  00000378  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000010  00000000004003d2  00000000004003d2  000003d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  00000000004003e8  00000000004003e8  000003e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     00000018  0000000000400408  0000000000400408  00000408  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     000000a8  0000000000400420  0000000000400420  00000420  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         0000001a  00000000004004c8  00000000004004c8  000004c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000080  00000000004004f0  00000000004004f0  000004f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         00000202  0000000000400570  0000000000400570  00000570  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000009  0000000000400774  0000000000400774  00000774  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       00000035  0000000000400780  0000000000400780  00000780  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 00000034  00000000004007b8  00000000004007b8  000007b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     000000f4  00000000004007f0  00000000004007f0  000007f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000008  0000000000600e10  0000000000600e10  00000e10  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000008  0000000000600e18  0000000000600e18  00000e18  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .jcr          00000008  0000000000600e20  0000000000600e20  00000e20  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000001d0  0000000000600e28  0000000000600e28  00000e28  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000008  0000000000600ff8  0000000000600ff8  00000ff8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got.plt      00000050  0000000000601000  0000000000601000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data         00000010  0000000000601050  0000000000601050  00001050  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .bss          00000008  0000000000601060  0000000000601060  00001060  2**0
                  ALLOC
 25 .comment      0000002b  0000000000000000  0000000000000000  00001060  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
0000000000400238 l    d  .interp	0000000000000000              .interp
0000000000400254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000400274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000400298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000004002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000400378 l    d  .dynstr	0000000000000000              .dynstr
00000000004003d2 l    d  .gnu.version	0000000000000000              .gnu.version
00000000004003e8 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000400408 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000400420 l    d  .rela.plt	0000000000000000              .rela.plt
00000000004004c8 l    d  .init	0000000000000000              .init
00000000004004f0 l    d  .plt	0000000000000000              .plt
0000000000400570 l    d  .text	0000000000000000              .text
0000000000400774 l    d  .fini	0000000000000000              .fini
0000000000400780 l    d  .rodata	0000000000000000              .rodata
00000000004007b8 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
00000000004007f0 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000600e10 l    d  .init_array	0000000000000000              .init_array
0000000000600e18 l    d  .fini_array	0000000000000000              .fini_array
0000000000600e20 l    d  .jcr	0000000000000000              .jcr
0000000000600e28 l    d  .dynamic	0000000000000000              .dynamic
0000000000600ff8 l    d  .got	0000000000000000              .got
0000000000601000 l    d  .got.plt	0000000000000000              .got.plt
0000000000601050 l    d  .data	0000000000000000              .data
0000000000601060 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000600e20 l     O .jcr	0000000000000000              __JCR_LIST__
00000000004005a0 l     F .text	0000000000000000              deregister_tm_clones
00000000004005d0 l     F .text	0000000000000000              register_tm_clones
0000000000400610 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000601060 l     O .bss	0000000000000001              completed.6973
0000000000600e18 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000400630 l     F .text	0000000000000000              frame_dummy
0000000000600e10 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              wc.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000004008e0 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000600e20 l     O .jcr	0000000000000000              __JCR_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000600e18 l       .init_array	0000000000000000              __init_array_end
0000000000600e28 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000600e10 l       .init_array	0000000000000000              __init_array_start
0000000000601000 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000400770 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000       F *UND*	0000000000000000              putchar@@GLIBC_2.2.5
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000601050  w      .data	0000000000000000              data_start
0000000000601060 g       .data	0000000000000000              _edata
0000000000000000       F *UND*	0000000000000000              fclose@@GLIBC_2.2.5
0000000000400774 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              fgetc@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000601050 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000601058 g     O .data	0000000000000000              .hidden __dso_handle
0000000000400780 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000400700 g     F .text	0000000000000065              __libc_csu_init
0000000000601068 g       .bss	0000000000000000              _end
0000000000400570 g     F .text	0000000000000000              _start
0000000000601060 g       .bss	0000000000000000              __bss_start
000000000040065d g     F .text	000000000000009c              main
0000000000000000       F *UND*	0000000000000000              fopen@@GLIBC_2.2.5
0000000000000000  w      *UND*	0000000000000000              _Jv_RegisterClasses
0000000000601060 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
00000000004004c8 g     F .init	0000000000000000              _init



Disassembly of section .init:

00000000004004c8 <_init>:
  4004c8:	48 83 ec 08          	sub    $0x8,%rsp
  4004cc:	48 8b 05 25 0b 20 00 	mov    0x200b25(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  4004d3:	48 85 c0             	test   %rax,%rax
  4004d6:	74 05                	je     4004dd <_init+0x15>
  4004d8:	e8 73 00 00 00       	callq  400550 <__gmon_start__@plt>
  4004dd:	48 83 c4 08          	add    $0x8,%rsp
  4004e1:	c3                   	retq   

Disassembly of section .plt:

00000000004004f0 <putchar@plt-0x10>:
  4004f0:	ff 35 12 0b 20 00    	pushq  0x200b12(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004f6:	ff 25 14 0b 20 00    	jmpq   *0x200b14(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400500 <putchar@plt>:
  400500:	ff 25 12 0b 20 00    	jmpq   *0x200b12(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400506:	68 00 00 00 00       	pushq  $0x0
  40050b:	e9 e0 ff ff ff       	jmpq   4004f0 <_init+0x28>

0000000000400510 <fclose@plt>:
  400510:	ff 25 0a 0b 20 00    	jmpq   *0x200b0a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400516:	68 01 00 00 00       	pushq  $0x1
  40051b:	e9 d0 ff ff ff       	jmpq   4004f0 <_init+0x28>

0000000000400520 <printf@plt>:
  400520:	ff 25 02 0b 20 00    	jmpq   *0x200b02(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400526:	68 02 00 00 00       	pushq  $0x2
  40052b:	e9 c0 ff ff ff       	jmpq   4004f0 <_init+0x28>

0000000000400530 <fgetc@plt>:
  400530:	ff 25 fa 0a 20 00    	jmpq   *0x200afa(%rip)        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400536:	68 03 00 00 00       	pushq  $0x3
  40053b:	e9 b0 ff ff ff       	jmpq   4004f0 <_init+0x28>

0000000000400540 <__libc_start_main@plt>:
  400540:	ff 25 f2 0a 20 00    	jmpq   *0x200af2(%rip)        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400546:	68 04 00 00 00       	pushq  $0x4
  40054b:	e9 a0 ff ff ff       	jmpq   4004f0 <_init+0x28>

0000000000400550 <__gmon_start__@plt>:
  400550:	ff 25 ea 0a 20 00    	jmpq   *0x200aea(%rip)        # 601040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400556:	68 05 00 00 00       	pushq  $0x5
  40055b:	e9 90 ff ff ff       	jmpq   4004f0 <_init+0x28>

0000000000400560 <fopen@plt>:
  400560:	ff 25 e2 0a 20 00    	jmpq   *0x200ae2(%rip)        # 601048 <_GLOBAL_OFFSET_TABLE_+0x48>
  400566:	68 06 00 00 00       	pushq  $0x6
  40056b:	e9 80 ff ff ff       	jmpq   4004f0 <_init+0x28>

Disassembly of section .text:

0000000000400570 <_start>:
  400570:	31 ed                	xor    %ebp,%ebp
  400572:	49 89 d1             	mov    %rdx,%r9
  400575:	5e                   	pop    %rsi
  400576:	48 89 e2             	mov    %rsp,%rdx
  400579:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40057d:	50                   	push   %rax
  40057e:	54                   	push   %rsp
  40057f:	49 c7 c0 70 07 40 00 	mov    $0x400770,%r8
  400586:	48 c7 c1 00 07 40 00 	mov    $0x400700,%rcx
  40058d:	48 c7 c7 5d 06 40 00 	mov    $0x40065d,%rdi
  400594:	e8 a7 ff ff ff       	callq  400540 <__libc_start_main@plt>
  400599:	f4                   	hlt    
  40059a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004005a0 <deregister_tm_clones>:
  4005a0:	b8 67 10 60 00       	mov    $0x601067,%eax
  4005a5:	55                   	push   %rbp
  4005a6:	48 2d 60 10 60 00    	sub    $0x601060,%rax
  4005ac:	48 83 f8 0e          	cmp    $0xe,%rax
  4005b0:	48 89 e5             	mov    %rsp,%rbp
  4005b3:	77 02                	ja     4005b7 <deregister_tm_clones+0x17>
  4005b5:	5d                   	pop    %rbp
  4005b6:	c3                   	retq   
  4005b7:	b8 00 00 00 00       	mov    $0x0,%eax
  4005bc:	48 85 c0             	test   %rax,%rax
  4005bf:	74 f4                	je     4005b5 <deregister_tm_clones+0x15>
  4005c1:	5d                   	pop    %rbp
  4005c2:	bf 60 10 60 00       	mov    $0x601060,%edi
  4005c7:	ff e0                	jmpq   *%rax
  4005c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004005d0 <register_tm_clones>:
  4005d0:	b8 60 10 60 00       	mov    $0x601060,%eax
  4005d5:	55                   	push   %rbp
  4005d6:	48 2d 60 10 60 00    	sub    $0x601060,%rax
  4005dc:	48 c1 f8 03          	sar    $0x3,%rax
  4005e0:	48 89 e5             	mov    %rsp,%rbp
  4005e3:	48 89 c2             	mov    %rax,%rdx
  4005e6:	48 c1 ea 3f          	shr    $0x3f,%rdx
  4005ea:	48 01 d0             	add    %rdx,%rax
  4005ed:	48 d1 f8             	sar    %rax
  4005f0:	75 02                	jne    4005f4 <register_tm_clones+0x24>
  4005f2:	5d                   	pop    %rbp
  4005f3:	c3                   	retq   
  4005f4:	ba 00 00 00 00       	mov    $0x0,%edx
  4005f9:	48 85 d2             	test   %rdx,%rdx
  4005fc:	74 f4                	je     4005f2 <register_tm_clones+0x22>
  4005fe:	5d                   	pop    %rbp
  4005ff:	48 89 c6             	mov    %rax,%rsi
  400602:	bf 60 10 60 00       	mov    $0x601060,%edi
  400607:	ff e2                	jmpq   *%rdx
  400609:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400610 <__do_global_dtors_aux>:
  400610:	80 3d 49 0a 20 00 00 	cmpb   $0x0,0x200a49(%rip)        # 601060 <__TMC_END__>
  400617:	75 11                	jne    40062a <__do_global_dtors_aux+0x1a>
  400619:	55                   	push   %rbp
  40061a:	48 89 e5             	mov    %rsp,%rbp
  40061d:	e8 7e ff ff ff       	callq  4005a0 <deregister_tm_clones>
  400622:	5d                   	pop    %rbp
  400623:	c6 05 36 0a 20 00 01 	movb   $0x1,0x200a36(%rip)        # 601060 <__TMC_END__>
  40062a:	f3 c3                	repz retq 
  40062c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400630 <frame_dummy>:
  400630:	48 83 3d e8 07 20 00 	cmpq   $0x0,0x2007e8(%rip)        # 600e20 <__JCR_END__>
  400637:	00 
  400638:	74 1e                	je     400658 <frame_dummy+0x28>
  40063a:	b8 00 00 00 00       	mov    $0x0,%eax
  40063f:	48 85 c0             	test   %rax,%rax
  400642:	74 14                	je     400658 <frame_dummy+0x28>
  400644:	55                   	push   %rbp
  400645:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  40064a:	48 89 e5             	mov    %rsp,%rbp
  40064d:	ff d0                	callq  *%rax
  40064f:	5d                   	pop    %rbp
  400650:	e9 7b ff ff ff       	jmpq   4005d0 <register_tm_clones>
  400655:	0f 1f 00             	nopl   (%rax)
  400658:	e9 73 ff ff ff       	jmpq   4005d0 <register_tm_clones>

000000000040065d <main>:
  40065d:	55                   	push   %rbp
  40065e:	48 89 e5             	mov    %rsp,%rbp
  400661:	48 83 ec 30          	sub    $0x30,%rsp
  400665:	89 7d dc             	mov    %edi,-0x24(%rbp)
  400668:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  40066c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400670:	48 83 c0 08          	add    $0x8,%rax
  400674:	48 8b 00             	mov    (%rax),%rax
  400677:	be 88 07 40 00       	mov    $0x400788,%esi
  40067c:	48 89 c7             	mov    %rax,%rdi
  40067f:	e8 dc fe ff ff       	callq  400560 <fopen@plt>
  400684:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400688:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  40068f:	00 
  400690:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  400697:	00 
  400698:	eb 1d                	jmp    4006b7 <main+0x5a>
  40069a:	0f be 45 e7          	movsbl -0x19(%rbp),%eax
  40069e:	89 c7                	mov    %eax,%edi
  4006a0:	e8 5b fe ff ff       	callq  400500 <putchar@plt>
  4006a5:	80 7d e7 0a          	cmpb   $0xa,-0x19(%rbp)
  4006a9:	75 07                	jne    4006b2 <main+0x55>
  4006ab:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  4006b0:	eb 05                	jmp    4006b7 <main+0x5a>
  4006b2:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  4006b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4006bb:	48 89 c7             	mov    %rax,%rdi
  4006be:	e8 6d fe ff ff       	callq  400530 <fgetc@plt>
  4006c3:	88 45 e7             	mov    %al,-0x19(%rbp)
  4006c6:	80 7d e7 ff          	cmpb   $0xff,-0x19(%rbp)
  4006ca:	75 ce                	jne    40069a <main+0x3d>
  4006cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4006d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4006d4:	48 89 c6             	mov    %rax,%rsi
  4006d7:	bf 90 07 40 00       	mov    $0x400790,%edi
  4006dc:	b8 00 00 00 00       	mov    $0x0,%eax
  4006e1:	e8 3a fe ff ff       	callq  400520 <printf@plt>
  4006e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4006ea:	48 89 c7             	mov    %rax,%rdi
  4006ed:	e8 1e fe ff ff       	callq  400510 <fclose@plt>
  4006f2:	b8 00 00 00 00       	mov    $0x0,%eax
  4006f7:	c9                   	leaveq 
  4006f8:	c3                   	retq   
  4006f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400700 <__libc_csu_init>:
  400700:	41 57                	push   %r15
  400702:	41 89 ff             	mov    %edi,%r15d
  400705:	41 56                	push   %r14
  400707:	49 89 f6             	mov    %rsi,%r14
  40070a:	41 55                	push   %r13
  40070c:	49 89 d5             	mov    %rdx,%r13
  40070f:	41 54                	push   %r12
  400711:	4c 8d 25 f8 06 20 00 	lea    0x2006f8(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400718:	55                   	push   %rbp
  400719:	48 8d 2d f8 06 20 00 	lea    0x2006f8(%rip),%rbp        # 600e18 <__init_array_end>
  400720:	53                   	push   %rbx
  400721:	4c 29 e5             	sub    %r12,%rbp
  400724:	31 db                	xor    %ebx,%ebx
  400726:	48 c1 fd 03          	sar    $0x3,%rbp
  40072a:	48 83 ec 08          	sub    $0x8,%rsp
  40072e:	e8 95 fd ff ff       	callq  4004c8 <_init>
  400733:	48 85 ed             	test   %rbp,%rbp
  400736:	74 1e                	je     400756 <__libc_csu_init+0x56>
  400738:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40073f:	00 
  400740:	4c 89 ea             	mov    %r13,%rdx
  400743:	4c 89 f6             	mov    %r14,%rsi
  400746:	44 89 ff             	mov    %r15d,%edi
  400749:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40074d:	48 83 c3 01          	add    $0x1,%rbx
  400751:	48 39 eb             	cmp    %rbp,%rbx
  400754:	75 ea                	jne    400740 <__libc_csu_init+0x40>
  400756:	48 83 c4 08          	add    $0x8,%rsp
  40075a:	5b                   	pop    %rbx
  40075b:	5d                   	pop    %rbp
  40075c:	41 5c                	pop    %r12
  40075e:	41 5d                	pop    %r13
  400760:	41 5e                	pop    %r14
  400762:	41 5f                	pop    %r15
  400764:	c3                   	retq   
  400765:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40076c:	00 00 00 00 

0000000000400770 <__libc_csu_fini>:
  400770:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400774 <_fini>:
  400774:	48 83 ec 08          	sub    $0x8,%rsp
  400778:	48 83 c4 08          	add    $0x8,%rsp
  40077c:	c3                   	retq   
